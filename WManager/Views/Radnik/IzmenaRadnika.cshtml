@model WManager.Models.ApplicationUser

@{
    ViewBag.Title = "IzmenaRadnika";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>IzmenaRadnika</h2>

@using (Html.BeginForm("IzmenaRadnika", "Radnik", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ApplicationUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @onkeyup = "onemoguciPolja()", @id = "emailPolje" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-2">
                <button type="button" class="btn btn-default" onclick="proveriRadnika()">Trazi radnika</button>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control shouldCheckFirst", @id = "lastName" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control shouldCheckFirst", @id = "firstName" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control shouldCheckFirst", @id = "phoneNumber" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <b class="control-label col-md-2">Novi Email</b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control shouldCheckFirst", @id = "newEmail" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default shouldCheckFirst">Izmeni</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

    function proveriRadnika() {

        var email = document.getElementById("emailPolje").value

        if (proveriEmail(email)) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("TraziRadnika","Radnik")',
                data: '{Email: "' + document.getElementById("emailPolje").value + '"}',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.status == 1) {
                        porukaUspeh("Radnik uspesno nadjen");
                        document.getElementById("lastName").value = data.radnik.LastName;
                        document.getElementById("firstName").value = data.radnik.FirstName;
                        document.getElementById("phoneNumber").value = data.radnik.PhoneNumber;
                        document.getElementById("newEmail").value = data.radnik.Email;
                        omoguciPolja();
                    }
                    if (data.status == 0) {
                        porukaNeuspeh("Radnik sa unetom email adresom nije nadjen!");

                        onemoguciPolja();
                    }
                    if (data.status == 2) {
                        porukaNeuspeh("Greska pri trazenju radnika!");

                        onemoguciPolja();
                    }
                }

            });
        }
        else {
            porukaNeuspeh("Morate uneti ispravan email!");

        }
    }
    </script>
}